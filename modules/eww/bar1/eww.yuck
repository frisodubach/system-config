;; Created   by https://github.com/rxyhn
;; Designed  by https://github.com/rxyhn
;; Maintaned by https://github.com/rxyhn

;; put path to aesthetic bar config files here ;;
;;(defvar eww "$HOME/.local/bin/eww -c $HOME/.config/eww/bar")
(defvar eww "eww -c $HOME/.config/eww")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;							Widget Section's							 ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Launcher Widgets ;;
(defwidget launcher []
	(box :orientation "v"
		 :space-evenly "false"
		 :spacing -15
  	(button :class "launcher_icon"
		   	:onclick "scripts/popup launcher"  "󱄅")))

;; Workspaces Widgets ;;
(defwidget workspaces []
  (eventbox :onscroll "scripts/change-active-workspace {} ${current_workspace}" :class "workspaces-widget"
    (box :space-evenly true
      (label :text "${workspaces}${current_workspace}" :visible false)
      (for workspace in workspaces
        (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
          (box :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
            (label :text "${workspace.id}")))))))
(deflisten workspaces :initial "[]" "scripts/get-workspaces")
(deflisten current_workspace :initial "1" "scripts/get-active-workspace")


;; Battery Widgets ;;
(defpoll battery			:interval "1s"	"scripts/battery icon")
(defpoll battery-capacity	:interval "1s"	"scripts/battery percent")
(defpoll charge-icon :interval "1s" "scripts/battery charge-icon")
(defpoll power-icon :interval "1s" "scripts/battery power-icon")
(defwidget bat []
    (eventbox :onhover "${eww} update bat=true"
              :onhoverlost "${eww} update bat=false"
	(box	  :orientation "v"
			  :space-evenly "false"
    (revealer :transition "slideup"
              :reveal bat
              :duration "550ms"
    (box      :orientation "v"
              :class "bat" battery-capacity
    (button   :class "bat"
              :tooltip "Toggle charge limit"
              :onclick "scripts/bat-tlp charge" charge-icon)
    (button   :class "bat"
              :tooltip "Toggle power mode"
              :onclick "scripts/bat-tlp power" power-icon)))
    (label	  :class "bat"
			  :halign "center"
			  :text battery))))
(defvar bat false)

;; Wifi Widgets ;;
(defpoll wifi-icon :interval "1s" "scripts/wifi icon")
(defpoll wifi-name :interval "1s" "scripts/wifi name")
(defwidget wifi []
	(box		:orientation "v"
				:tooltip wifi-name
	(button		:onclick "scripts/wofi-wifi"
				:class "wifi-icon" wifi-icon)))

;; Brightness Widgets ;;
(defpoll current-brightness :interval "1s" "brightnessctl -m -d amdgpu_bl0 | awk -F, '{print substr($4, 0, length($4)-1)}' | tr -d '%'")
(defwidget bright []
  (eventbox :onhover "${eww} update bright=true"
  			:onhoverlost "${eww} update bright=false"
  			(box    :orientation "v"
			  		:space-evenly "false"
					:spacing 2
  			(revealer :transition "slideup"
			  		  :reveal bright
					  :duration "550ms"
  			(scale :class "bribar"
			  	   :value current-brightness
				   :tooltip "Brightness: ${current-brightness}%"
				   :onchange "brightnessctl set {}%"
				   :orientation "v"
				   :flipped true
				   :max 101
				   :min 0))
  			(label :class "brightness-icon"
			  	   :text ""))))
(defvar bright false)

;; Volume Widgets ;;
(defpoll current-volume :interval "1s" "pamixer --get-volume")
(defwidget volum []
	(eventbox :onhover "${eww} update volum=true"
			  :onhoverlost "${eww} update volum=false"
	(box      :orientation "v"
			  :space-evenly "false"
			  :spacing "2"
	(revealer :transition "slideup"
			  :reveal volum
			  :duration "550ms"
	(scale    :class "volbar"
			  :value current-volume
			  :orientation "v"
			  :flipped true
			  :tooltip "Volume: ${current-volume}%"
			  :max 101
			  :min 0
			  ;; :onchange "amixer -D pulse sset Master {}%" )) ;;
			  :onchange "pamixer --set-volume {}" ))
	(button   :onclick "scripts/popup audio"   :class "volume-icon" ""))))
(defvar volum false)

;;Widget to mute notifications
(defpoll notif-icon :interval "1s" "scripts/notification icon")
(defpoll notif-state :interval "1s" "scripts/notification state")
(defwidget notif []
	(box		:orientation "v"
				:tooltip notif-state
	(button		:onclick "scripts/notification toggle"
				:class "notif-icon" notif-icon)))

;; Control Panel Widgets ;;
(defwidget control []
	(box :orientation "v"
		 :space-evenly false
		 :class "control"
(bat)
(wifi)
(bright)
(volum)
(notif)))

;; Clock Widgets ;;
(defwidget time []
	(box	:orientation "v"
			:class "time"
			:valign "end"
	(button	:onclick "scripts/popup calendar"
			:class "time-hour" hour)
	(button	:onclick "scripts/popup calendar"
			:class "time-min"  min)))
(defpoll hour	:interval "1s"	"date '+%H'")
(defpoll min	:interval "1s"	"date '+%M'")

;; Calendar Widgets ;;
(defpoll calendar_day :interval "10h"
    "date '+%d'")
(defpoll calendar_month :interval "10h"
    "scripts/calendar")
(defpoll calendar_year :interval "10h"
    "date '+%Y'")
(defwidget cal []
	(box :class "cal-box"
		 :orientation "v"
	(box :class "cal-inner-box"
	(calendar :class "cal"
			  :day calendar_day
			  :month calendar_month
			  :year calendar_year))))

;; Powermenu Widgets ;;
(defwidget power []
	(eventbox	:onhover "${eww} update power=true"
				:onhoverlost "${eww} update power=false"
	(box		:orientation "v"
				:space-evenly "false"
				:vexpand "false"
				:class "powermenu"
	(revealer	:transition "slideup"
				:reveal power
				:duration "250ms"
	(box		:orientation "v"
				:space-evenly "false"


  	(button		:class "button-reb"
	  			:tooltip "Reboot"
				:onclick "sudo reboot"	"󰜉")

    (button		:class "button-lock"
				:tooltip "Lock Screen"
				;;:onclick "swaylock --clock --indicator --screenshots --effect-scale 0.4 --effect-vignette 0.2:0.5 --effect-blur 4x2 --datestr \"%a %e.%m.%Y\" --timestr \"%k:%M\""	"")))
				:onclick "sudo gtklock"	"")))

	(button		:class "button-off"
				:tooltip "Shutdown"
				:onclick "scripts/wofi-power"	"⏻"))))
(defvar power false)

;; Top Widgets ;;
(defwidget top []
	(box	:orientation "v"
			:space-evenly "false"
			:valign "start"
(launcher)
(workspaces)))

;; Bottom Widgets ;;
(defwidget bottom []
	(box	:orientation "v"
			:space-evenly false
(time)
(power)))

;; End Widgets ;;
(defwidget end []
	(box :orientation "v"
		 :space-evenly "false"
		 :valign "end"
		 :spacing 5
(control)
(bottom)))

;; Bar Widgets ;;
(defwidget bar []
	(box :class "eww_bar"
		 :orientation "v"
		 :vexpand "false"
		 :hexpand "false"
(top)
(end)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;							Window Section's							 ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Bar Windows ;;
(defwindow bar
    :exclusive true
    :monitor 0
    :windowtype "dock"
    :stacking "fg"
        :focusable false
	:geometry (geometry :x "8"
						:y "0"
						:height "95%"
						:width "38px"
                        :anchor "right center")
	:monitor 0
	:reserve (struts :distance "35px"
					 :side "left")
	:wm-ignore false
	:hexpand "false"
	:vexpand "false"
(bar))

;; Calendar Windows ;;
(defwindow calendar
	:geometry (geometry :x "1595px"
						:y "70%"
						:width "270px"
						:height "60px")
(cal))
